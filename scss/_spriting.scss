$icons-map: 'icons' !default;

$m: sprite-map("#{$icons-map}/*.png", $layout: smart);
$m-retina: sprite-map("#{$icons-map}@x2/*.png", $layout: smart);
$half: 50%;

%comma-separated {
  @each $item in $icons-map {
    background: $m no-repeat;
  }
}

%comma-separated-retina {
  @each $item in $icons-map {
    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
      background: $m-retina no-repeat;
    }
  }
}

//noinspection SassScssUnresolvedFunction
@function size-retina($m-retina) {
  @return ((ceil(image-width(sprite-path($m-retina)) / 2) auto));
}

//noinspection SassScssUnresolvedFunction
@function position($m, $s-name: false, $h-name: false, $a-name: false) {
  @if $s-name {
    @return (sprite-position($m, $s-name));
  }
  @if $h-name {
    @return (sprite-position($m, $h-name));
  }
  @if $a-name {
    @return (sprite-position($m, $a-name));
  }
}

//noinspection SassScssUnresolvedFunction
@function position-retina($m, $s-name: false, $h-name: false, $a-name: false) {
  @if $s-name {
    @return (
    round(nth(sprite-position($m, $s-name), 1) / 2)
    round(nth(sprite-position($m, $s-name), 2) / 2)
    );
  }
  @if $h-name {
    @return (
    round(nth(sprite-position($m, $h-name), 1) / 2)
    round(nth(sprite-position($m, $h-name), 2) / 2)
    );
  }
  @if $a-name {
    @return (
    round(nth(sprite-position($m, $a-name), 1) / 2)
    round(nth(sprite-position($m, $a-name), 2) / 2)
    );
  }
}

//TODO add ability to switch off comma-separated classes. "$comma-separated: true !default";
@mixin sprites($class, $name, $icons-map: icons, $hover: false, $active: false, $pseudo: false, $size: true, $retina: true, $center: false, $center-y: false, $center-x: false) {
  $h-name: $name + -hover;
  $a-name: $name + -active;
  $image-width: image-width(sprite-file($m, $name));
  $image-height: image-height(sprite-file($m, $name));

  @if $pseudo {
    #{$class} {
      @content;
      &:after {
        @extend %comma-separated;
        content: "";
        background-position: position($m, $name);
        @if $size {
          width: $image-width;
          height: $image-height;
          overflow: hidden;
        }
        @if $center {
          position: absolute;
          top: $half;
          left: $half;
          margin-top: -($image-height / 2);
          margin-left: -($image-width / 2);
        } @else if $center-y {
          position: absolute;
          top: $half;
          margin-top: -($image-height / 2);
        } @else if $center-x {
          position: absolute;
          left: $half;
          margin-left: -($image-width / 2);
        }
      }

      @if $hover {
        &:hover {
          &:after {
            background-position: position($m, $h-name);
          }
        }
      }

      @if $active {
        &:active {
          &:after {
            background-position: position($m, $a-name);
          }
        }
      }
    }
  } @else {
    #{$class} {
      @content;
      @extend %comma-separated;
      background-position: position($m, $name);
      @if $size {
        width: $image-width;
        height: $image-height;
        overflow: hidden;
      }

      @if $hover {
        &:hover {
          background-position: position($m, $h-name);
        }
      }

      @if $active {
        &:active {
          background-position: position($m, $a-name);
        }
      }
    }
  }

  @if $retina {
    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {

      @if $pseudo {
        #{$class} {
          @content;
          &:after {
            @extend %comma-separated-retina;
            background-position: position-retina($m-retina, $name);
            background-size: size-retina($m-retina);
          }

          @if $hover {
            &:hover {
              &:after {
                background-position: position-retina($m-retina, $h-name);
              }
            }
          }

          @if $active {
            &:active {
              &:after {
                background-position: position-retina($m-retina, $a-name);
              }
            }
          }
        }
      } @else {
        #{$class} {
          @content;
          @extend %comma-separated-retina;
          background-position: position-retina($m-retina, $name);
          background-size: size-retina($m-retina);
          @if $hover {
            &:hover {
              background-position: position-retina($m-retina, $h-name);
            }
          }
          @if $active {
            &:active {
              background-position: position-retina($m-retina, $a-name);
            }
          }
        }
      }

    }
  }

}
