$icons-map: 'icons' !default;
$retina-sprite: null !default;
$comma-separated: true !default;

$map: sprite-map("#{$icons-map}/*.png", $layout: smart);
$map-retina: if($retina-sprite == true, sprite-map("#{$icons-map}@x2/*.png", $layout: smart), null);

//TODO add ability to have only one 'icons' folder, do not require icons@x2 for retina sprites.
@if $comma-separated {
  %comma-separated {
    @each $item in $icons-map {
      background: $map no-repeat;
    }
  }
  %comma-separated-retina {
    @each $item in $icons-map {
      @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
        background: $map-retina no-repeat;
      }
    }
  }
}

@function background($map, $name: false, $hover-name: false) {
  @if $name {
    @return (sprite-position($map, $name));
  }
  @if $hover-name {
    @return (sprite-position($map, $hover-name));
  }
}

@function background-retina($map-retina, $name: false, $hover-name: false, $size-retina: false) {
  @if $name {
    @return (
    round(nth(sprite-position($map-retina, $name), 1) / 2)
    round(nth(sprite-position($map-retina, $name), 2) / 2)
    );
  }
  @if $hover-name {
    @return (
    round(nth(sprite-position($map-retina, $hover-name), 1) / 2)
    round(nth(sprite-position($map-retina, $hover-name), 2) / 2)
    );
  }
  @if $size-retina {
    @return ((ceil(image-width(sprite-path($map-retina)) / 2) auto));
  }
}

@mixin center($center, $half, $image-height, $image-width, $center-y, $center-x) {
  @if $center {
    position: absolute;
    top: $half;
    left: $half;
    margin: {
      top: -($image-height / 2);
      left: -($image-width / 2);
    }
  } @else if $center-y {
    position: absolute;
    top: $half;
    margin: {
      top: -($image-height / 2);
    }
  } @else if $center-x {
    position: absolute;
    left: $half;
    margin: {
      left: -($image-width / 2);
    }
  }
}

@mixin center-retina($center, $retina-image-height, $retina-image-width, $center-y, $center-x) {
  @if $center {
    margin: {
      top: -($retina-image-height / 2);
      left: -($retina-image-width / 2);
    }
  } @else if $center-y {
    margin: {
      top: -($retina-image-height / 2);
    }
  } @else if $center-x {
    margin: {
      left: -($retina-image-width / 2);
    }
  }
}

@mixin sprites($class, $name, $hover: false, $pseudo: true, $size: true, $center: false, $center-y: false, $center-x: false) {
  $half: 50%;
  $hover-name: $name + -hover;
  $image-width: image-width(sprite-file($map, $name));
  $image-height: image-height(sprite-file($map, $name));

  @if $pseudo {
    #{$class} {
      &:after {
        content: "";
        @include center($center, $half, $image-height, $image-width, $center-y, $center-x);
        @if $comma-separated {
          background-position: background($map, $name);

          @at-root #{$class}:after {
            @extend %comma-separated;
          }

        } @else {
          background: $map no-repeat background($map, $name);
        }

        @if $size {
          width: $image-width;
          height: $image-height;
        }
        @content;
      }
      @if $hover {
        &:hover {
          &:after {
            background-position: background($map, $hover-name);
          }
        }
      }
    }
  } @else {
    #{$class} {
      @include center($center, $half, $image-height, $image-width, $center-y, $center-x);
      @if $comma-separated {
        background-position: background($map, $name);

        @at-root #{$class} {
          @extend %comma-separated;
        }

      } @else {
        background: $map no-repeat background($map, $name);
      }

      @if $size {
        width: $image-width;
        height: $image-height;
      }

      @content;
      @if $hover {
        &:hover {
          background-position: background($map, $hover-name);
        }
      }
    }
  }

  @if $retina-sprite {
    $map-retina: sprite-map("#{$icons-map}@x2/*.png", $layout: smart);
    $retina-image-width: (image-width(sprite-file($map-retina, $name)) / 2);
    $retina-image-height: (image-height(sprite-file($map-retina, $name)) / 2);
    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
      @if $pseudo {
        #{$class} {
          &:after {
            @include center-retina($center, $retina-image-height, $retina-image-width, $center-y, $center-x);
            @if $comma-separated {
              background-position: background-retina($map-retina, $name);

              @at-root #{$class}:after {
                @extend %comma-separated-retina;
              }

            } @else {
              background: $map-retina no-repeat background-retina($map-retina, $name);
            }
            background-size: background-retina($map-retina, $size-retina: true);

            @if $size {
              width: $retina-image-width;
              height: $retina-image-height;
            }

            @if $hover {
              &:hover {
                &:after {
                  background-position: background-retina($map-retina, $hover-name);
                }
              }
            }
          }
        }

      } @else {
        #{$class} {
          @include center-retina($center, $retina-image-height, $retina-image-width, $center-y, $center-x);

          @if $comma-separated {
            background-position: background-retina($map-retina, $name);

            @at-root #{$class} {
              @extend %comma-separated-retina;
            }

          } @else {
            background: $map-retina no-repeat background-retina($map-retina, $name);
          }
          background-size: background-retina($map-retina, $size-retina: true);

          @if $size {
            width: $retina-image-width;
            height: $retina-image-height;
          }

          @if $hover {
            &:hover {
              background-position: background-retina($map-retina, $hover-name);
            }
          }
        }
      }
    }
  }
}

@mixin sprites-states($name) {
  background-position: background($map, $name);
  @if $retina-sprite {
    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
      background-position: background-retina($map-retina, $name);
      background-size: size-retina($map-retina);
    }
  }
}

@debug "icons map folder: => #{$icons-map}";
@debug "retina sprite map enabled: => #{$retina-sprite}";
@debug "comma separated enabled: => #{$comma-separated}";
@debug "generated sprite map => #{$map}";
@debug "generated sprite map for retina => #{$map-retina}";
