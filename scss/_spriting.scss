//Created by Paul G. Easy Sprites
//https://github.com/paulgabronis/Easy-Sprites
//
//global variables
$icons-map: 'icons' !default;
$retina-sprite: false !default;
$comma-separated: true !default;

$map: sprite-map("#{$icons-map}/*.png", $layout: smart);
$map-retina: if($retina-sprite == true, sprite-map("#{$icons-map}@x2/*.png", $layout: smart), false);

@if $comma-separated {
  %comma-separated {
    @each $item in $icons-map {
      background: $map no-repeat;
    }
  }
  %comma-separated-retina {
    @each $item in $icons-map {
      @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
        background: $map-retina no-repeat;
      }
    }
  }
}

@function background($map, $name: false, $hover-name: false) {
  @if $name {
    @return (sprite-position($map, $name));
  }
  @if $hover-name {
    @return (sprite-position($map, $hover-name));
  }
}

@function background-retina($map-retina, $name: false, $hover-name: false, $size-retina: false) {
  @if $name {
    @return (
            round(nth(sprite-position($map-retina, $name), 1) / 2) round(nth(sprite-position($map-retina, $name), 2) / 2)
    );
  }
  @if $hover-name {
    @return (
            round(nth(sprite-position($map-retina, $hover-name), 1) / 2) round(nth(sprite-position($map-retina, $hover-name), 2) / 2)
    );
  }
  @if $size-retina {
    @return ((ceil(image-width(sprite-path($map-retina)) / 2) auto));
  }
}

@mixin center($center, $image-height, $image-width, $center-y, $center-x) {
  $half-sprite: 50%;
  @if $center {
    position: absolute;
    top: $half-sprite;
    left: $half-sprite;
    margin: {
      top: -($image-height / 2);
      left: -($image-width / 2);
    }
  } @else if $center-y {
    position: absolute;
    top: $half-sprite;
    margin: {
      top: -($image-height / 2);
    }
  } @else if $center-x {
    position: absolute;
    left: $half-sprite;
    margin: {
      left: -($image-width / 2);
    }
  }
}

@mixin center-retina($center, $retina-image-height, $retina-image-width, $center-y, $center-x) {
  @if $center {
    margin: {
      top: -($retina-image-height / 2);
      left: -($retina-image-width / 2);
    }
  } @else if $center-y {
    margin: {
      top: -($retina-image-height / 2);
    }
  } @else if $center-x {
    margin: {
      left: -($retina-image-width / 2);
    }
  }
}

//TODO do better structure while constructing classes
@mixin sprite-core($name, $size, $image-width, $image-height) {
  @if $comma-separated {
    background-position: background($map, $name);

    @at-root #{'&'} {
      @extend %comma-separated;
    }

  } @else {
    background: $map no-repeat background($map, $name);
  }

  @if $size {
    width: $image-width;
    height: $image-height;
  }

}

@mixin sprite-core-retina($name, $size, $retina-image-width, $retina-image-height) {
  @if $comma-separated {
    background-position: background-retina($map-retina, $name);

    @at-root #{'&'} {
      @extend %comma-separated-retina;
    }

  } @else {
    background: $map-retina no-repeat background-retina($map-retina, $name);
  }
  background-size: background-retina($map-retina, $size-retina: true);

  @if $size {
    width: $retina-image-width;
    height: $retina-image-height;
  }
}

@mixin sprites($name, $hover: false, $size: true, $center: false, $center-y: false, $center-x: false, $comma-separated: $comma-separated) {

  $hover-name: $name + -hover;
  $image-width: image-width(sprite-file($map, $name));
  $image-height: image-height(sprite-file($map, $name));

  @include center($center, $image-height, $image-width, $center-y, $center-x);
  @include sprite-core($name, $size, $image-width, $image-height);
  @content;

  @if $hover {
    &:hover {
      background-position: background($map, $hover-name);
    }
  }

  @if $retina-sprite {
    $retina-image-width: (image-width(sprite-file($map-retina, $name)) / 2);
    $retina-image-height: (image-height(sprite-file($map-retina, $name)) / 2);

    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
      @include center-retina($center, $retina-image-height, $retina-image-width, $center-y, $center-x);
      @include sprite-core-retina($name, $size, $retina-image-width, $retina-image-height);

      @if $hover {
        &:hover {
          background-position: background-retina($map-retina, $hover-name);
        }
      }
    }
  }

}

@mixin sprites-states($name) {
  background-position: background($map, $name);
  @if $retina-sprite {
    @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
      background-position: background-retina($map-retina, $name);
    }
  }
}
