@import "spriting";

//TODO create responsive grid

//$social-icons: facebook, rss, skype, yahoo, gplus;
//@each $item in $social-icons {
//  @include sprites($class: '.social-#{$item}', $name: $item) {
//    position: relative;
//    display: inline-block;
//    vertical-align: middle;
//    background-color: #f7f7f7;
//    margin: 10px;
//  }
//}

//$hover-pseudo: true;
@include sprites($class: '.test', $name: imgclock, $hover: true, $pseudo: true) {
  display: inline-block;
  position: relative;
}

//TODO keep for further testings
//@include sprites($class: '.test-2', $name: imgclock, $center: true) {
//
//}
//
//@include sprites($class: '.test-3', $name: imgclock, $pseudo: true, $hover: true) {
//
//}

a {

}

// @if index(){
//   @return
//  background-position: ;
//  @if $size {
//    width: $image-width;
//    height: $image-height;
//    overflow: hidden;
//  }
//
//  @if $hover {
//    &:hover {
//      background-position: sprite-position($map, $sprite-hover);
//    }
//  }
//
//  @if $active {
//    &:active {
//      background-position: sprite-position($map, $sprite-active);
//    }
//
//}}

@function convert-angle($value, $unit) {
  $convertable-units: deg grad turn rad;
  $conversion-factors: 1 10grad/9deg 1turn/360deg 3.1415926rad/180deg;
  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
    @return $value
             / nth($conversion-factors, index($convertable-units, unit($value)))
             * nth($conversion-factors, index($convertable-units, $unit));
  } @else {
    @warn "Cannot convert #{unit($value)} to #{$unit}";
  }
}